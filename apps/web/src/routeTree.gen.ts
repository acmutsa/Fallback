/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as TeamIndexRouteImport } from "./routes/team/index";
import { Route as TeamNewRouteImport } from "./routes/team/new";
import { Route as TeamTeamIdRouteImport } from "./routes/team/$teamId";

const IndexRoute = IndexRouteImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => rootRouteImport,
} as any);
const TeamIndexRoute = TeamIndexRouteImport.update({
	id: "/team/",
	path: "/team/",
	getParentRoute: () => rootRouteImport,
} as any);
const TeamNewRoute = TeamNewRouteImport.update({
	id: "/team/new",
	path: "/team/new",
	getParentRoute: () => rootRouteImport,
} as any);
const TeamTeamIdRoute = TeamTeamIdRouteImport.update({
	id: "/team/$teamId",
	path: "/team/$teamId",
	getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
	"/": typeof IndexRoute;
	"/team/$teamId": typeof TeamTeamIdRoute;
	"/team/new": typeof TeamNewRoute;
	"/team": typeof TeamIndexRoute;
}
export interface FileRoutesByTo {
	"/": typeof IndexRoute;
	"/team/$teamId": typeof TeamTeamIdRoute;
	"/team/new": typeof TeamNewRoute;
	"/team": typeof TeamIndexRoute;
}
export interface FileRoutesById {
	__root__: typeof rootRouteImport;
	"/": typeof IndexRoute;
	"/team/$teamId": typeof TeamTeamIdRoute;
	"/team/new": typeof TeamNewRoute;
	"/team/": typeof TeamIndexRoute;
}
export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths: "/" | "/team/$teamId" | "/team/new" | "/team";
	fileRoutesByTo: FileRoutesByTo;
	to: "/" | "/team/$teamId" | "/team/new" | "/team";
	id: "__root__" | "/" | "/team/$teamId" | "/team/new" | "/team/";
	fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	TeamTeamIdRoute: typeof TeamTeamIdRoute;
	TeamNewRoute: typeof TeamNewRoute;
	TeamIndexRoute: typeof TeamIndexRoute;
}

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		"/team/": {
			id: "/team/";
			path: "/team";
			fullPath: "/team";
			preLoaderRoute: typeof TeamIndexRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		"/team/new": {
			id: "/team/new";
			path: "/team/new";
			fullPath: "/team/new";
			preLoaderRoute: typeof TeamNewRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		"/team/$teamId": {
			id: "/team/$teamId";
			path: "/team/$teamId";
			fullPath: "/team/$teamId";
			preLoaderRoute: typeof TeamTeamIdRouteImport;
			parentRoute: typeof rootRouteImport;
		};
	}
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	TeamTeamIdRoute: TeamTeamIdRoute,
	TeamNewRoute: TeamNewRoute,
	TeamIndexRoute: TeamIndexRoute,
};
export const routeTree = rootRouteImport
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();
